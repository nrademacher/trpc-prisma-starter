// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

generator zod {
  provider      = "zod-prisma"
  output        = "./zod"
  // imports       = "./zod-utils"
  relationModel = "default"
}

model User {
  id String @id @default(cuid())

  createdAt DateTime @unique @default(now())
  updatedAt DateTime @unique @default(now())

  name         String @unique
  email        String @unique
  passwordHash String

  posts Post[] @relation(name: "PostToUser")

  @@map("users")
}

model Post {
  id String @id @default(uuid())

  // To return `Date`s intact through the API we need to add data transformers
  // https://trpc.io/docs/data-transformers
  createdAt DateTime @unique @default(now())
  updatedAt DateTime @unique @default(now())

  title String
  text  String

  user   User   @relation(name: "PostToUser", fields: [userId], references: [id])
  userId String

  @@map("posts")
}
